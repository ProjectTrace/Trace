package com.uw.hcde.fizzlab.trace.services;

import android.graphics.Color;
import android.os.AsyncTask;
import android.os.Message;

import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.PolylineOptions;
import com.uw.hcde.fizzlab.trace.controller.walk.PathGoogleMapActivity;
import com.uw.hcde.fizzlab.trace.controller.walk.PathJSONParser;

import org.json.JSONObject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Handler;

/**
 * Created by sonagrigoryan on 14-11-21.
 * Parses jsondata into a route and draws the segment of the path based on the parsed data
 * JsonData is created by Web Google Map Services
 */
public class ParserTask extends
        AsyncTask<String, Integer, List<List<HashMap<String, String>>>> {

    GoogleMap googleMap;
    // Points generated by google map web service for the walk
    private ArrayList<LatLng> points = null;

    public ParserTask(GoogleMap gMap) {

        googleMap = gMap;
    }

    @Override
    protected List<List<HashMap<String, String>>> doInBackground(
            String... jsonData) {

        JSONObject jObject;
        List<List<HashMap<String, String>>> routes = null;

        try {
            jObject = new JSONObject(jsonData[0]);
            PathJSONParser parser = new PathJSONParser();
            routes = parser.parse(jObject);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return routes;
    }

    @Override
    protected void onPostExecute(List<List<HashMap<String, String>>> routes) {
        PolylineOptions polyLineOptions = null;

        // traversing through routes
        for (int i = 0; i < routes.size(); i++) {
            points = new ArrayList<LatLng>();
            polyLineOptions = new PolylineOptions();
            List<HashMap<String, String>> path = routes.get(i);

            for (int j = 0; j < path.size(); j++) {
                HashMap<String, String> point = path.get(j);

                double lat = Double.parseDouble(point.get("lat"));
                double lng = Double.parseDouble(point.get("lng"));
                LatLng position = new LatLng(lat, lng);

                points.add(position);
            }

           /* polyLineOptions.addAll(points);
            polyLineOptions.width(4);
            polyLineOptions.color(Color.BLUE);*/
        }
       // googleMap.addPolyline(polyLineOptions);
    }

    public ArrayList<LatLng> getPoints() {
        return points;
    }
}